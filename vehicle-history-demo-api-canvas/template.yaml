Transform: AWS::Serverless-2016-10-31
Resources:
  vehicleHistoryAPI:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub
        - ${ResourceName} From Stack ${AWS::StackName}
        - ResourceName: vehicleHistoryAPI
      StageName: Prod
      DefinitionBody:
        openapi: '3.0'
        info: {}
        paths:
          /vehicle-history/{vehicleId}:
            get:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${getVehicleHistoryFunction.Arn}/invocations
              responses: {}
      EndpointConfiguration: REGIONAL
      TracingEnabled: true
      Cors:
        AllowOrigin: '''*'''
        AllowMethods: '''GET'''
  vehicleHistoryBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-getvehicl-${AWS::AccountId}
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: alias/aws/s3
  vehicleHistoryBucketBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref vehicleHistoryBucket
      PolicyDocument:
        Id: RequireEncryptionInTransit
        Version: '2012-10-17'
        Statement:
          - Principal: '*'
            Action: '*'
            Effect: Deny
            Resource:
              - !GetAtt vehicleHistoryBucket.Arn
              - !Sub ${vehicleHistoryBucket.Arn}/*
            Condition:
              Bool:
                aws:SecureTransport: 'false'
  vehicleHistoryTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: vehicleId
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: vehicleId
          KeyType: HASH
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
  getVehicleHistoryFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: !Sub
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: getVehicleHistoryFunction
      CodeUri: src/com.boothby.vehicle_history
      Handler: Handler::handler
      Runtime: java11
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Environment:
        Variables:
          TABLE_NAME: !Ref vehicleHistoryTable
          BUCKET_NAME: !Ref vehicleHistoryBucket
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref vehicleHistoryTable
        - DynamoDBCrudPolicy:
            TableName: !Ref vehicleHistoryTable
        - S3CrudPolicy:
            BucketName: !Ref vehicleHistoryBucket
      Events:
        vehicleHistoryAPIGETvehiclehistoryvehicleId:
          Type: Api
          Properties:
            Path: /vehicle-history/{vehicleId}
            Method: GET
            RestApiId: !Ref vehicleHistoryAPI
  getVehicleHistoryFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName: !Sub /aws/lambda/${getVehicleHistoryFunction}